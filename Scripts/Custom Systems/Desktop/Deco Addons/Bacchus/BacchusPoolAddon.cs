
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class BacchusPoolAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {1801, -6, -4, 0}, {1801, -5, -4, 0}, {1801, -4, -4, 0}// 1	2	3	
			, {1801, -3, -4, 0}, {1801, -2, -4, 0}, {1801, 0, -4, 0}// 4	5	6	
			, {1801, 1, -4, 0}, {1801, 2, -4, 0}, {1801, -5, -4, 5}// 7	8	9	
			, {1801, -4, -4, 5}, {1801, -3, -4, 5}, {1801, -2, -4, 5}// 10	11	12	
			, {1801, -1, -4, 5}, {1801, 0, -4, 5}, {1801, 1, -4, 5}// 13	14	15	
			, {1801, 2, -4, 5}, {1801, -1, -4, 0}, {1801, -6, -4, 0}// 16	18	19	
			, {1801, -6, -4, 5}, {1801, -6, -3, 0}, {1801, -6, -2, 0}// 20	21	22	
			, {1801, -6, -1, 0}, {1801, -6, 0, 0}, {1801, -6, 1, 0}// 23	24	25	
			, {1801, -6, 2, 0}, {1801, -6, 3, 0}, {1801, -5, 3, 0}// 26	27	28	
			, {1801, -4, 3, 0}, {1801, -3, 3, 0}, {1801, -2, 3, 0}// 29	30	31	
			, {1801, -1, 3, 0}, {1801, 0, 3, 0}, {1801, 1, 3, 0}// 32	33	34	
			, {1801, 2, 3, 0}, {1801, -5, -3, 0}, {1801, -5, -2, 0}// 35	36	37	
			, {1801, -5, 1, 0}, {1801, -5, 2, 0}, {1801, -4, -3, 0}// 38	39	40	
			, {1801, -4, -2, 0}, {1801, -4, 1, 0}, {1801, -4, 2, 0}// 41	42	43	
			, {1801, -5, -3, 5}, {1801, -5, -2, 5}, {1801, -5, 1, 5}// 44	45	46	
			, {1801, -5, 2, 5}, {1801, -5, 3, 5}, {1801, -4, -3, 5}// 47	48	49	
			, {1801, -4, -2, 5}, {1801, -4, 1, 5}, {1801, -4, 2, 5}// 50	51	52	
			, {1801, -4, 3, 5}, {1801, -3, 3, 5}, {1801, -2, 3, 5}// 53	54	55	
			, {1801, -1, 3, 5}, {1801, 0, 3, 5}, {1801, 1, 3, 5}// 56	57	58	
			, {1801, 2, 3, 5}, {1805, 2, -3, 0}, {1805, 2, -2, 0}// 59	60	61	
			, {1805, 2, -1, 0}, {1805, 2, 0, 0}, {1805, 2, 1, 0}// 62	63	64	
			, {1805, 2, 2, 0}, {1805, -6, -2, 5}, {1805, -6, -1, 5}// 65	66	67	
			, {1805, -6, 0, 5}, {1175, -5, 0, 19}, {1175, -5, -1, 19}// 68	70	71	
			, {1175, -5, 0, 19}, {1175, -4, -1, 19}, {1175, -4, 0, 19}// 72	73	74	
			, {1175, -3, -1, 19}, {1175, -3, 0, 19}, {1175, -2, -1, 19}// 75	76	77	
			, {1175, -2, 0, 19}, {2603, -3, -3, 0}, {2603, -3, -2, 0}// 78	79	80	
			, {2603, -3, -1, 0}, {2603, -3, 0, 0}, {2603, -3, 1, 0}// 81	82	83	
			, {2603, -3, 2, 0}, {2603, -2, -3, 0}, {2603, -2, -2, 0}// 84	85	86	
			, {2603, -2, -1, 0}, {2603, -2, 0, 0}, {2603, -2, 1, 0}// 87	88	89	
			, {2603, -2, 2, 0}, {2603, -1, -3, 0}, {2603, -1, -2, 0}// 90	91	92	
			, {2603, -1, -1, 0}, {2603, -1, 0, 0}, {2603, -1, 1, 0}// 93	94	95	
			, {2603, -1, 2, 0}, {2603, 0, -3, 0}, {2603, 0, -2, 0}// 96	97	98	
			, {2603, 0, -1, 0}, {2603, 0, 0, 0}, {2603, 0, 1, 0}// 99	100	101	
			, {2603, 0, 2, 0}, {2603, 1, -3, 0}, {2603, 1, -2, 0}// 102	103	104	
			, {2603, 1, -1, 0}, {2603, 1, 0, 0}, {2603, 1, 1, 0}// 105	106	107	
			, {2603, 1, 2, 0}, {1802, -5, 1, 15}, {1801, -5, 1, 10}// 108	109	110	
			, {1801, -5, 0, 0}, {1801, -5, -1, 0}, {1801, -4, -1, 0}// 111	112	113	
			, {1801, -5, 0, 5}, {1801, -5, -1, 5}, {1801, -4, 0, 0}// 114	115	116	
			, {1801, -4, -1, 5}, {1801, -4, 0, 5}, {1801, -5, 0, 10}// 117	118	119	
			, {1801, -4, 0, 10}, {1801, -4, 0, 14}, {1801, -5, 0, 14}// 120	121	122	
			, {1801, -4, -1, 10}, {1801, -4, -1, 14}, {1801, -5, -1, 10}// 123	124	125	
			, {1801, -5, -1, 14}, {1801, -6, -3, 0}, {1801, -6, -2, 0}// 126	127	128	
			, {1801, -6, -1, 0}, {1801, -6, 0, 0}, {1801, -6, 1, 0}// 129	130	131	
			, {1801, -6, 2, 0}, {1801, -6, 3, 0}, {1801, -6, -3, 5}// 132	133	134	
			, {1801, -6, -2, 5}, {1801, -6, -1, 5}, {1801, -6, 0, 5}// 135	136	137	
			, {1801, -6, 1, 5}, {1801, -6, 2, 5}, {1801, -6, 3, 5}// 138	139	140	
			, {1802, -5, 2, 10}, {1801, -6, 4, 0}, {1801, -5, 4, 0}// 141	142	143	
			, {1801, -4, 4, 0}, {1802, -6, 4, 5}, {1802, -5, 4, 5}// 144	145	146	
			, {1802, -4, 4, 5}, {1802, -6, 5, 0}, {1802, -5, 5, 0}// 147	148	149	
			, {1802, -4, 5, 0}, {1802, -4, 2, 10}, {1801, -4, 1, 10}// 150	151	152	
			, {1802, -4, 1, 15}, {13456, -3, -3, 5}, {13456, -3, -2, 5}// 153	154	155	
			, {13456, -3, -1, 5}, {13456, -3, 0, 5}, {13456, -3, 1, 5}// 156	157	158	
			, {13456, -3, 2, 5}, {13456, -2, -3, 5}, {13456, -2, -2, 5}// 159	160	161	
			, {13456, -2, -1, 5}, {13456, -2, 0, 5}, {13456, -2, 1, 5}// 162	163	164	
			, {13456, -2, 2, 5}, {13456, -1, -3, 5}, {13456, -1, -2, 5}// 165	166	167	
			, {13456, -1, -1, 5}, {13456, -1, 0, 5}, {13456, -1, 1, 5}// 168	169	170	
			, {13456, -1, 2, 5}, {13456, 0, -3, 5}, {13456, 0, -2, 5}// 171	172	173	
			, {13456, 0, -1, 5}, {13456, 0, 0, 5}, {13456, 0, 1, 5}// 174	175	176	
			, {13456, 0, 2, 5}, {13456, 1, -3, 5}, {13456, 1, -2, 5}// 177	178	179	
			, {13456, 1, -1, 5}, {13456, 1, 0, 5}, {13456, 1, 1, 5}// 180	181	182	
			, {13456, 1, 2, 5}, {13456, 2, -3, 5}, {13456, 2, -2, 5}// 183	184	185	
			, {13456, 2, -1, 5}, {13456, 2, 0, 5}, {13456, 2, 1, 5}// 186	187	188	
			, {13456, 2, 2, 5}, {1801, 3, -4, 0}, {1801, 4, -4, 0}// 189	190	191	
			, {1801, 5, -4, 0}, {1813, 6, -4, 0}, {1801, 3, -4, 5}// 192	193	194	
			, {1801, 4, -4, 5}, {1801, 3, 3, 0}, {1801, 4, 3, 0}// 195	197	198	
			, {1801, 5, -3, 0}, {1801, 5, -2, 0}, {1801, 5, -1, 0}// 199	200	201	
			, {1801, 5, 0, 0}, {1801, 5, 1, 0}, {1801, 5, 2, 0}// 202	203	204	
			, {1801, 5, 3, 0}, {1803, 6, -3, 0}, {1803, 6, -2, 0}// 205	206	207	
			, {1803, 6, -1, 0}, {1803, 6, 0, 0}, {1803, 6, 1, 0}// 208	209	210	
			, {1803, 6, 2, 0}, {1811, 6, 3, 0}, {1801, 4, -3, 0}// 211	212	213	
			, {1801, 4, -2, 0}, {1801, 4, -1, 0}, {1801, 4, 0, 0}// 214	215	216	
			, {1801, 4, 1, 0}, {1801, 4, 2, 0}, {1801, 3, 3, 5}// 217	218	219	
			, {1801, 4, -3, 5}, {1801, 4, -2, 5}, {1801, 4, -1, 5}// 220	221	222	
			, {1801, 4, 0, 5}, {1801, 4, 1, 5}, {1801, 4, 2, 5}// 223	224	225	
			, {1801, 4, 3, 5}, {1803, 5, -3, 5}, {1803, 5, -2, 5}// 226	227	228	
			, {1803, 5, -1, 5}, {1803, 5, 0, 5}, {1803, 5, 1, 5}// 229	230	231	
			, {1803, 5, 2, 5}, {1801, 3, -3, 0}, {1801, 3, -2, 0}// 232	233	234	
			, {1801, 3, -1, 0}, {1801, 3, 0, 0}, {1801, 3, 1, 0}// 235	236	237	
			, {1801, 3, 2, 0}, {1805, 3, -3, 5}, {1805, 3, -2, 5}// 238	239	240	
			, {1805, 3, -1, 5}, {1805, 3, 0, 5}, {1805, 3, 1, 5}// 241	242	243	
			, {1805, 3, 2, 5}, {13456, 3, -3, 5}, {13456, 3, -2, 5}// 244	246	247	
			, {13456, 3, -1, 5}, {13456, 3, 0, 5}, {13456, 3, 1, 5}// 248	249	250	
			, {13456, 3, 2, 5}// 251	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new BacchusPoolAddonDeed();
			}
		}

		[ Constructable ]
		public BacchusPoolAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 8791, -3, -4, 10, 53, -1, "Beach Ball", 1);// 17
			AddComplexComponent( (BaseAddon) this, 8791, -3, 3, 10, 262, -1, "Beach Ball", 1);// 69
			AddComplexComponent( (BaseAddon) this, 8791, 4, -4, 10, 4, -1, "Beach Ball", 1);// 196
			AddComplexComponent( (BaseAddon) this, 8791, 4, 3, 10, 33, -1, "Beach Ball", 1);// 245

		}

		public BacchusPoolAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class BacchusPoolAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new BacchusPoolAddon();
			}
		}

		[Constructable]
		public BacchusPoolAddonDeed()
		{
			Name = "BacchusPool";
		}

		public BacchusPoolAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}